#!/bin/sh

CONF_VERSION="`git describe`"
CONF_BUILD_NAME="grend $CONF_VERSION"
CONF_DEMO_TARGETS=
CONF_PREFIX=/usr/local
CONF_SYSROOT=
CONF_DEBUG=0
CONF_CFLAGS=""
CONF_PUBLIC_MODE=0
CONF_DEV_BUILD=0

CONF_CC=cc
CONF_CXX="c++"
CONF_AR=ar
CONF_STRIP=strip
CONF_IS_EMSCRIPTEN=0
CONF_HOST_CC=cc
CONF_HOST_CXX=c++

if [ ! -z "$CC" ];  then CONF_CC="$CC"; fi
if [ ! -z "$CXX" ]; then CONF_CXX="$CXX"; fi
if [ ! -z "$AR" ];  then CONF_AR="$AR"; fi
if [ ! -z "$EMSCRIPTEN" ]; then CONF_IS_EMSCRIPTEN=1; fi

CONF_GL_TARGET=core330
CONF_GL_FLAGS=
CONF_EM_FLAGS=
CONF_GLSL_STRING=

# Parse the given options
for arg in $@; do
	OPT_KEY="`echo $arg | cut -d= -f1`"
	OPT_VAL="`echo $arg | cut -d= -f2`"

	case "$OPT_KEY" in
		--prefix)
			CONF_PREFIX="$OPT_VAL"
			;;

		--sysroot)
			CONF_SYSROOT="$OPT_VAL"
			;;

		--help|-h)
			cat <<- END_OF_HELP
				This script sets build configuration for $CONF_BUILD_NAME

				Options:
				  -h,  --help             Display this help message and exit.
				       --prefix=[path]    Set the installation root to the given path.
				       --sysroot=[path]   Set the path for the system root. This is prepended
				                          to the PREFIX variable when copying files, and is
				                          useful for cross-compiling, chroot installs, etc.
				  -t,  --target=[api]     OpenGL api target (gles2, gles3, core330, core 430)
				  -d,  --debug            Specify that this is a debug build. This option
				                          toggles some debugging messages.
				  -s,  --static           Output a static executable.
				  -D,  --dev              Specify that this is a development build.
			END_OF_HELP
			exit 0
			;;

		--target|-t)
			CONF_GL_TARGET="$OPT_VAL"
			;;

		--debug|-d)
			CONF_DEBUG=1
			;;

		--lib-only|-lo)
			CONF_TARGETS="lib"
			;;

		--static|-s)
			CONF_CFLAGS="$CONF_FLAGS -static"
			;;

		--dev|-D)
			BRANCHNAME="`git rev-parse --abbrev-ref HEAD`"
			CONF_BUILD_NAME="grend dev build $BRANCHNAME@$CONF_VERSION"
			CONF_DEV_BUILD=1
			;;

		*)
			echo "configure: error: Unknown option \"$OPT_KEY\""
			exit 1
	esac
done;

case "$CONF_GL_TARGET" in
	gles2)
		CONF_GLSL_STRING='"100"'
		read CONF_GL_FLAGS <<- ENDFLAGS
			-D IMGUI_IMPL_OPENGL_ES2 \
			-D GLSL_VERSION=100 \
			-D GLES2_MAX_POINT_LIGHTS=4 \
			-D GLES2_MAX_SPOT_LIGHTS=2 \
			-D GLES2_MAX_DIRECTIONAL_LIGHTS=1 \
			-D NO_FORMAT_CONVERSION \
			-D NO_FLOATING_FB
		ENDFLAGS
		;;

	gles3)
		CONF_GLSL_STRING='"300 es"'
		read CONF_GL_FLAGS <<- ENDFLAGS
			-D IMGUI_IMPL_OPENGL_ES3 \
			-D GLSL_VERSION=300 \
			-D NO_FORMAT_CONVERSION \
			-D NO_FLOATING_FB
		ENDFLAGS
		;;

	core330)
		CONF_GLSL_STRING='"330 core"'
		read -r CONF_GL_FLAGS <<- ENDFLAGS
			-D IMGUI_IMPL_OPENGL_LOADER_GLEW \
			-D GLSL_VERSION=330
		ENDFLAGS
		;;

	core430)
		CONF_GLSL_STRING='"430 core"'
		read -r CONF_GL_FLAGS <<- ENDFLAGS
			-D IMGUI_IMPL_OPENGL_LOADER_GLEW \
			-D GLSL_VERSION=430
		ENDFLAGS
		;;

	*)
		echo "configure: error: Unknown GL profile \"$CONF_GL_TARGET\""
		exit 1
		;;
esac

if [ "$CONF_IS_EMSCRIPTEN" = 1 ]; then
	# XXX: should be configurable (this is the configure script after all)
	TOTAL_MEMORY=1048576000
	read -r CONF_EM_FLAGS <<- ENDFLAGS
		 -s USE_SDL=2 \
		 -s USE_WEBGL2=1 \
		 -s ERROR_ON_UNDEFINED_SYMBOLS=0 \
		 -s TOTAL_MEMORY=$TOTAL_MEMORY \
		 -s OFFSCREEN_FRAMEBUFFER=1
	ENDFLAGS
fi

echo "BUILD_NAME    = $CONF_BUILD_NAME"
echo "TARGETS       = $CONF_TARGETS"
echo "PREFIX        = $CONF_PREFIX"
echo "SYSROOT       = $CONF_SYSROOT"
echo "DEV_BUILD     = $CONF_DEV_BUILD"
echo "CC            = $CONF_CC"
echo "CXX           = $CONF_CXX"
echo "AR            = $CONF_AR"
echo "IS_EMSCRIPTEN = $CONF_IS_EMSCRIPTEN"
echo "IS_DEBUG      = $CONF_DEBUG"
echo "Full install path: $CONF_SYSROOT$CONF_PREFIX"

# Write the options to the makefile
echo "Generating makefile..."
echo "PREFIX=$CONF_PREFIX"   >  mk/config.mk
echo "SYSROOT=$CONF_SYSROOT" >> mk/config.mk
echo "CC=$CONF_CC" >> mk/config.mk
echo "CXX=$CONF_CXX" >> mk/config.mk
echo "AR=$CONF_AR" >> mk/config.mk
echo "IS_EMSCRIPTEN=$CONF_IS_EMSCRIPTEN" >> mk/config.mk
echo "CONF_TARGETS=$CONF_TARGETS" >> mk/config.mk
echo "CONF_CFLAGS=$CONF_CFLAGS" >> mk/config.mk
echo "CONF_GL_FLAGS=$CONF_GL_FLAGS" >> mk/config.mk
echo "CONF_EM_FLAGS=$CONF_EM_FLAGS" >> mk/config.mk
echo "CONF_GLSL_STRING=$CONF_GLSL_STRING" >> mk/config.mk
echo "CONF_DEBUG=$CONF_DEBUG" >> mk/config.mk

if [ "$CONF_IS_EMSCRIPTEN" = 1 ]; then
	cat mk/base.mk mk/webgl.mk > Makefile
else
	cp mk/base.mk Makefile
fi

## Set flags in config.h
## TODO: decide how to do this
#echo "Generating config.h..."
#sed "s#SOME_PREFIX_HERE#$CONF_PREFIX/share/grend#" < mk/config.h.tmp > include/grend/config.h
#echo "// This file is autogenerated, see the configure script"
#echo "#define CONF_BUILD_NAME \"$CONF_BUILD_NAME\"" >> include/grend/config.h
#echo "#endif" >> include/grend/config.h

# And we're finished
echo "Done"
